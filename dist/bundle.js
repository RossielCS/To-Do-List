!function(t){var e={};function n(o){if(e[o])return e[o].exports;var r=e[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=t,n.c=e,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(o,r,function(e){return t[e]}.bind(null,r));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=4)}([function(t,e,n){"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n=function(t,e){var n=t[1]||"",o=t[3];if(!o)return n;if(e&&"function"==typeof btoa){var r=(l=o,a=btoa(unescape(encodeURIComponent(JSON.stringify(l)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),"/*# ".concat(s," */")),i=o.sources.map((function(t){return"/*# sourceURL=".concat(o.sourceRoot||"").concat(t," */")}));return[n].concat(i).concat([r]).join("\n")}var l,a,s;return[n].join("\n")}(e,t);return e[2]?"@media ".concat(e[2]," {").concat(n,"}"):n})).join("")},e.i=function(t,n,o){"string"==typeof t&&(t=[[null,t,""]]);var r={};if(o)for(var i=0;i<this.length;i++){var l=this[i][0];null!=l&&(r[l]=!0)}for(var a=0;a<t.length;a++){var s=[].concat(t[a]);o&&r[s[0]]||(n&&(s[2]?s[2]="".concat(n," and ").concat(s[2]):s[2]=n),e.push(s))}},e}},function(t,e,n){var o=n(2),r=n(3);"string"==typeof(r=r.__esModule?r.default:r)&&(r=[[t.i,r,""]]);var i={insert:"head",singleton:!1};o(r,i);t.exports=r.locals||{}},function(t,e,n){"use strict";var o,r=function(){return void 0===o&&(o=Boolean(window&&document&&document.all&&!window.atob)),o},i=function(){var t={};return function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}t[e]=n}return t[e]}}(),l=[];function a(t){for(var e=-1,n=0;n<l.length;n++)if(l[n].identifier===t){e=n;break}return e}function s(t,e){for(var n={},o=[],r=0;r<t.length;r++){var i=t[r],s=e.base?i[0]+e.base:i[0],c=n[s]||0,A="".concat(s," ").concat(c);n[s]=c+1;var d=a(A),p={css:i[1],media:i[2],sourceMap:i[3]};-1!==d?(l[d].references++,l[d].updater(p)):l.push({identifier:A,updater:g(p,e),references:1}),o.push(A)}return o}function c(t){var e=document.createElement("style"),o=t.attributes||{};if(void 0===o.nonce){var r=n.nc;r&&(o.nonce=r)}if(Object.keys(o).forEach((function(t){e.setAttribute(t,o[t])})),"function"==typeof t.insert)t.insert(e);else{var l=i(t.insert||"head");if(!l)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");l.appendChild(e)}return e}var A,d=(A=[],function(t,e){return A[t]=e,A.filter(Boolean).join("\n")});function p(t,e,n,o){var r=n?"":o.media?"@media ".concat(o.media," {").concat(o.css,"}"):o.css;if(t.styleSheet)t.styleSheet.cssText=d(e,r);else{var i=document.createTextNode(r),l=t.childNodes;l[e]&&t.removeChild(l[e]),l.length?t.insertBefore(i,l[e]):t.appendChild(i)}}function u(t,e,n){var o=n.css,r=n.media,i=n.sourceMap;if(r?t.setAttribute("media",r):t.removeAttribute("media"),i&&btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleSheet)t.styleSheet.cssText=o;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(o))}}var f=null,C=0;function g(t,e){var n,o,r;if(e.singleton){var i=C++;n=f||(f=c(e)),o=p.bind(null,n,i,!1),r=p.bind(null,n,i,!0)}else n=c(e),o=u.bind(null,n,e),r=function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)};return o(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;o(t=e)}else r()}}t.exports=function(t,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=r());var n=s(t=t||[],e);return function(t){if(t=t||[],"[object Array]"===Object.prototype.toString.call(t)){for(var o=0;o<n.length;o++){var r=a(n[o]);l[r].references--}for(var i=s(t,e),c=0;c<n.length;c++){var A=a(n[c]);0===l[A].references&&(l[A].updater(),l.splice(A,1))}n=i}}}},function(t,e,n){"use strict";n.r(e);var o=n(0),r=n.n(o)()(!0);r.push([t.i,'body,html,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{margin:0;padding:0;border:0;font:inherit;font-size:100%;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote::before,blockquote::after,q::before,q::after{content:"";content:none}table{border-collapse:collapse;border-spacing:0}*,*::after,*::before{box-sizing:border-box}nav{min-width:200px}nav ul{height:100%;padding:15vh 0;background-color:#53b7fa;display:flex;flex-direction:column;justify-content:flex-start;align-items:flex-start}nav ul li{padding-top:15px;padding-bottom:15px;width:100%;cursor:pointer;display:flex;flex-direction:row;justify-content:flex-start;align-items:flex-start}nav ul li div{height:30px;width:30px;margin-left:25px;margin-right:15px;background-repeat:no-repeat;background-position:center;background-size:contain}nav ul li p{line-height:30px;font-weight:600;font-size:15px}nav ul li:hover{background-color:#8dd0fd}.title-btn{line-height:25px;display:flex;flex-direction:column;justify-content:center;align-items:flex-start}.title-btn:hover{cursor:pointer}.title-btn h2{font-size:20px;font-weight:600}.title-btn .proj-list-todo{margin-left:20px}.project-content{display:flex;flex-direction:column;justify-content:center;align-items:flex-start;width:100%;padding:20px 20px;line-height:25px;border:1px solid rgba(204,204,204,.2);border-radius:10px;box-shadow:5px 5px 8px -2px rgba(63,63,63,.15);background-color:#fff}.project-content:hover{cursor:pointer}.project-content h2{font-size:22px;font-weight:600}.project-content h3{margin-left:20px;font-size:18px;font-weight:500}#sect-selected-todo{width:100%;background-color:#f2f7fd}#sect-selected-todo #show-all-todo,#sect-selected-todo #show-all-proj{height:100%}#sect-selected-todo #show-all-todo h1,#sect-selected-todo #show-all-proj h1{height:80px;text-align:center;line-height:80px;font-size:30px;font-weight:700;background-color:#fff;border-bottom:1px solid rgba(204,204,204,.2);box-shadow:1px 1px 8px -2px rgba(63,63,63,.15)}#sect-selected-todo #show-all-todo .show-ul-cont ul,#sect-selected-todo #show-all-proj .show-ul-cont ul{margin:40px}#sect-selected-todo #show-all-todo .show-ul-cont ul li,#sect-selected-todo #show-all-proj .show-ul-cont ul li{margin-bottom:2vh;display:flex}#sect-selected-todo #show-all-todo .show-ul-cont ul li .todo-priority,#sect-selected-todo #show-all-proj .show-ul-cont ul li .todo-priority{position:relative;width:90px;margin-right:20px;background-size:contain;background-repeat:no-repeat;background-position:center}#sect-selected-todo #show-all-todo .show-ul-cont ul li .todo-priority:hover,#sect-selected-todo #show-all-proj .show-ul-cont ul li .todo-priority:hover{cursor:pointer}#sect-selected-todo #show-all-todo .show-ul-cont ul li .todo-priority p,#sect-selected-todo #show-all-proj .show-ul-cont ul li .todo-priority p{position:absolute;left:50%;top:50%;transform:translate(-50%, -50%);font-size:12px;font-weight:600}#sect-selected-todo #show-all-todo .show-ul-cont ul li .todo-content,#sect-selected-todo #show-all-proj .show-ul-cont ul li .todo-content{width:100%;padding:20px 20px;line-height:25px;border:1px solid rgba(204,204,204,.2);border-radius:10px;box-shadow:5px 5px 8px -2px rgba(63,63,63,.15);background-color:#fff}#sect-selected-todo #show-all-todo .show-ul-cont ul li .todo-content:hover,#sect-selected-todo #show-all-proj .show-ul-cont ul li .todo-content:hover{cursor:pointer}#sect-selected-todo #show-all-todo .show-ul-cont ul li .todo-content .title-btn h3,#sect-selected-todo #show-all-proj .show-ul-cont ul li .todo-content .title-btn h3{font-size:22px;font-weight:700}#sect-selected-todo #show-all-todo .show-ul-cont ul li .todo-content .title-btn h4,#sect-selected-todo #show-all-proj .show-ul-cont ul li .todo-content .title-btn h4{font-size:18px;font-weight:600}#sect-selected-todo #show-all-todo .show-ul-cont ul li .todo-content p,#sect-selected-todo #show-all-proj .show-ul-cont ul li .todo-content p{margin-left:15px;font-size:15px}.modal{position:absolute;display:none;z-index:1;width:100vw;height:100vh;backdrop-filter:blur(4px)}.modal .modal-content{position:fixed;padding:5vh;width:50vw;left:50%;top:50%;transform:translate(-50%, -50%);height:max-content;border-radius:20px;border:1px solid rgba(204,204,204,.2);animation-name:animatetop;animation-duration:.6s;background-color:#d5eeff}.modal .modal-content .input-msg-required,.modal .modal-content #delete-warning{display:none}.modal .modal-content h3,.modal .modal-content h4{margin-bottom:20px;text-align:center}.modal .modal-content h3{font-size:20px;font-weight:600}.modal .modal-content form{display:flex;flex-direction:column;justify-content:space-between;align-items:flex-start}.modal .modal-content form label,.modal .modal-content form p{margin-bottom:10px}.modal .modal-content form #delete-warning{font-weight:600;color:#f05a5a}.modal .modal-content form input,.modal .modal-content form select{width:100%;height:30px;margin-bottom:10px;padding-left:10px;border:none}.modal .modal-content form input:focus,.modal .modal-content form select:focus{outline:1px solid #53b7fa}.modal .modal-content form input[type=textarea]{overflow:auto}.modal .modal-content form button{height:45px;width:100%;border:none;color:#fff;font-family:"Quicksand",sans-serif;font-size:16px;font-weight:600;display:flex;flex-direction:row;justify-content:center;align-items:center}.modal .modal-content form button:hover{cursor:pointer}.modal .modal-content form button:focus{outline:none}.modal .modal-content form .btn-submit,.modal .modal-content form .btn-edit{background-color:#4fd44f}.modal .modal-content form .btn-submit:hover,.modal .modal-content form .btn-edit:hover{background-color:#41ad41}.modal .modal-content form .delete-todo{background-color:#f8833f}.modal .modal-content form .delete-todo:hover{background-color:#cf6e36}.modal .modal-content form .btn-cancel{background-color:#f05a5a}.modal .modal-content form .btn-cancel:hover{background-color:#c44a4a}.modal .modal-content form .radio-container{display:flex;flex-direction:row;justify-content:flex-start;align-items:center}.modal .modal-content form .radio-container div{line-height:15px;margin-right:15px}.modal .modal-content form .radio-container div input{height:15px;width:15px;vertical-align:text-top}.modal .modal-content form .radio-container div label{font-size:14px}@keyframes animatetop{from{top:-300px;opacity:0}to{top:50%;opacity:1}}#content{margin:auto;display:grid;grid-template-columns:1fr minmax(768px, 1920px) 1fr;font-family:"Quicksand",sans-serif}main{height:100vh;grid-column:2/3;display:flex;flex-direction:row;justify-content:center;align-items:center}main>*{height:100%}',"",{version:3,sources:["F:/GitHub/JavaScript/To-Do-List/src/assets/stylesheets/reset.scss","F:/GitHub/JavaScript/To-Do-List/src/assets/stylesheets/navbar.scss","F:/GitHub/JavaScript/To-Do-List/src/assets/stylesheets/_mixins.scss","F:/GitHub/JavaScript/To-Do-List/src/assets/stylesheets/todos_proj.scss","F:/GitHub/JavaScript/To-Do-List/src/assets/stylesheets/modal.scss","F:/GitHub/JavaScript/To-Do-List/src/assets/stylesheets/_variables.scss","F:/GitHub/JavaScript/To-Do-List/src/assets/stylesheets/style.scss"],names:[],mappings:"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",file:"style.scss",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/\n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nbody,\nhtml,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font: inherit;\n  font-size: 100%;\n  vertical-align: baseline;\n}\n\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection { display: block; }\n\nbody { line-height: 1; }\n\nol,\nul {\n  list-style: none;\n}\n\nblockquote,\nq {\n  quotes: none;\n}\n\nblockquote::before,\nblockquote::after,\nq::before,\nq::after {\n  content: '';\n  content: none;\n}\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\n*,\n*::after,\n*::before {\n  box-sizing: border-box;\n}\n","nav {\r\n  min-width: 200px;\r\n\r\n  ul {\r\n    height: 100%;\r\n    padding: 15vh 0;\r\n    background-color: rgb(83, 183, 250);\r\n\r\n    @include flex(column, flex-start, flex-start);\r\n\r\n    li {\r\n      padding-top: 15px;\r\n      padding-bottom: 15px;\r\n      width: 100%;\r\n      cursor: pointer;\r\n\r\n      @include flex(row, flex-start, flex-start);\r\n\r\n      div {\r\n        height: 30px;\r\n        width: 30px;\r\n        margin-left: 25px;\r\n        margin-right: 15px;\r\n        background-repeat: no-repeat;\r\n        background-position: center;\r\n        background-size: contain;\r\n      }\r\n\r\n      p {\r\n        line-height: 30px;\r\n        font-weight: 600;\r\n        font-size: 15px;\r\n      }\r\n\r\n      &:hover {\r\n        background-color: rgb(141, 208, 253);\r\n      }\r\n    }\r\n  }\r\n}\r\n","@mixin flex($direction, $justify, $align) {\r\n  display: flex;\r\n  flex-direction: $direction;\r\n  justify-content: $justify;\r\n  align-items: $align;\r\n}\r\n\r\n@mixin section {\r\n  width: 100%;\r\n  padding: 20px 20px;\r\n  line-height: 25px;\r\n  border: 1px solid rgba(204, 204, 204, 0.2);\r\n  border-radius: 10px;\r\n  box-shadow: 5px 5px 8px -2px rgba(63, 63, 63, 0.15);\r\n  background-color: rgb(255, 255, 255);\r\n}\r\n\r\n@mixin pointer {\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n}\r\n","@import 'mixins';\r\n@import 'variables';\r\n\r\n.title-btn {\r\n  line-height: 25px;\r\n\r\n  @include pointer;\r\n  @include flex(column, center, flex-start);\r\n\r\n  h2 {\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n  }\r\n\r\n  .proj-list-todo {\r\n    margin-left: 20px;\r\n  }\r\n}\r\n\r\n.project-content {\r\n  @include flex(column, center, flex-start);\r\n  @include section;\r\n  @include pointer;\r\n\r\n  h2 {\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n  }\r\n\r\n  h3 {\r\n    margin-left: 20px;\r\n    font-size: 18px;\r\n    font-weight: 500;\r\n  }\r\n}\r\n\r\n#sect-selected-todo {\r\n  width: 100%;\r\n  background-color: rgb(242, 247, 253);\r\n\r\n  #show-all-todo,\r\n  #show-all-proj {\r\n    height: 100%;\r\n\r\n    h1 {\r\n      height: 80px;\r\n      text-align: center;\r\n      line-height: 80px;\r\n      font-size: 30px;\r\n      font-weight: 700;\r\n      background-color: #fff;\r\n      border-bottom: 1px solid rgba(204, 204, 204, 0.2);\r\n      box-shadow: 1px 1px 8px -2px rgba(63, 63, 63, 0.15);\r\n    }\r\n\r\n    .show-ul-cont {\r\n      ul {\r\n        margin: 40px;\r\n\r\n        li {\r\n          margin-bottom: 2vh;\r\n          display: flex;\r\n\r\n          .todo-priority {\r\n            position: relative;\r\n            width: 90px;\r\n            margin-right: 20px;\r\n            background-size: contain;\r\n            background-repeat: no-repeat;\r\n            background-position: center;\r\n\r\n            @include pointer;\r\n\r\n            p {\r\n              position: absolute;\r\n              left: 50%;\r\n              top: 50%;\r\n              transform: translate(-50%, -50%);\r\n              font-size: 12px;\r\n              font-weight: 600;\r\n            }\r\n          }\r\n\r\n          .todo-content {\r\n            @include section;\r\n            @include pointer;\r\n\r\n            .title-btn {\r\n              h3 {\r\n                font-size: 22px;\r\n                font-weight: 700;\r\n              }\r\n\r\n              h4 {\r\n                font-size: 18px;\r\n                font-weight: 600;\r\n              }\r\n            }\r\n\r\n            p {\r\n              margin-left: 15px;\r\n              font-size: 15px;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","@import 'mixins';\r\n@import 'variables';\r\n\r\n.modal {\r\n  position: absolute;\r\n  display: none;\r\n  z-index: 1;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  backdrop-filter: blur(4px);\r\n\r\n  .modal-content {\r\n    position: fixed;\r\n    padding: 5vh;\r\n    width: 50vw;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    height: max-content;\r\n    border-radius: 20px;\r\n    border: 1px solid rgba(204, 204, 204, 0.2);\r\n    animation-name: animatetop;\r\n    animation-duration: 0.6s;\r\n    background-color: $primary-color-light;\r\n\r\n    .input-msg-required,\r\n    #delete-warning {\r\n      display: none;\r\n    }\r\n\r\n    h3,\r\n    h4 {\r\n      margin-bottom: 20px;\r\n      text-align: center;\r\n    }\r\n\r\n    h3 {\r\n      font-size: 20px;\r\n      font-weight: 600;\r\n    }\r\n\r\n    form {\r\n      @include flex(column, space-between, flex-start);\r\n\r\n      label,\r\n      p {\r\n        margin-bottom: 10px;\r\n      }\r\n\r\n      #delete-warning {\r\n        font-weight: 600;\r\n        color: $cancel;\r\n      }\r\n\r\n      input,\r\n      select {\r\n        width: 100%;\r\n        height: 30px;\r\n        margin-bottom: 10px;\r\n        padding-left: 10px;\r\n        border: none;\r\n\r\n        &:focus {\r\n          outline: 1px solid $primary-color-dark;\r\n        }\r\n      }\r\n\r\n      input[type='textarea'] {\r\n        overflow: auto;\r\n      }\r\n\r\n      button {\r\n        height: 45px;\r\n        width: 100%;\r\n        border: none;\r\n        color: #fff;\r\n        font-family: 'Quicksand', sans-serif;\r\n        font-size: 16px;\r\n        font-weight: 600;\r\n\r\n        @include flex(row, center, center);\r\n\r\n        &:hover {\r\n          cursor: pointer;\r\n        }\r\n\r\n        &:focus {\r\n          outline: none;\r\n        }\r\n      }\r\n\r\n      .btn-submit,\r\n      .btn-edit {\r\n        background-color: $submit;\r\n\r\n        &:hover {\r\n          background-color: rgb(65, 173, 65);\r\n        }\r\n      }\r\n\r\n      .delete-todo {\r\n        background-color: $delete;\r\n\r\n        &:hover {\r\n          background-color: rgb(207, 110, 54);\r\n        }\r\n      }\r\n\r\n      .btn-cancel {\r\n        background-color: $cancel;\r\n\r\n        &:hover {\r\n          background-color: rgb(196, 74, 74);\r\n        }\r\n      }\r\n\r\n      .radio-container {\r\n        @include flex(row, flex-start, center);\r\n\r\n        div {\r\n          line-height: 15px;\r\n          margin-right: 15px;\r\n\r\n          input {\r\n            height: 15px;\r\n            width: 15px;\r\n            vertical-align: text-top;\r\n          }\r\n\r\n          label {\r\n            font-size: 14px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @keyframes animatetop {\r\n    from {\r\n      top: -300px;\r\n      opacity: 0;\r\n    }\r\n\r\n    to {\r\n      top: 50%;\r\n      opacity: 1;\r\n    }\r\n  }\r\n}\r\n","$primary-color-dark: rgb(83, 183, 250);\r\n$primary-color-medium: rgb(141, 208, 253);\r\n$primary-color-light: rgb(213, 238, 255);\r\n$secondary-color: #e8e9e5;\r\n$terciary-color: #c3c2b9;\r\n\r\n$cancel: rgb(240, 90, 90);\r\n$submit: rgb(79, 212, 79);\r\n$delete: rgb(248, 131, 63);\r\n\r\n$critical: rgb(255, 0, 0);\r\n$high: rgb(255, 166, 0);\r\n$medium: rgb(255, 251, 0);\r\n$low: rgb(30, 255, 0);\r\n","@import 'mixins';\r\n@import 'variables';\r\n@import 'reset';\r\n@import 'navbar';\r\n@import 'todos_proj';\r\n@import 'modal';\r\n\r\n#content {\r\n  margin: auto;\r\n  display: grid;\r\n  grid-template-columns: 1fr minmax(768px, 1920px) 1fr;\r\n  font-family: 'Quicksand', sans-serif;\r\n}\r\n\r\nmain {\r\n  height: 100vh;\r\n  grid-column: 2/3;\r\n\r\n  @include flex(row, center, center);\r\n\r\n  & > * {\r\n    height: 100%;\r\n  }\r\n}\r\n"]}]),e.default=r},function(t,e,n){"use strict";n.r(e);n(1);const o=t=>{let e="";return{getTitle:()=>t,getIndex:()=>e,getAllProp:()=>[t,e],updateTitle:e=>t=e,updateIndex:t=>(e=t,e)}},r={};const i=(t,e,n,o,r,i,l="")=>{let a=!1,s="";return{getAllProp:()=>[t,e,n,o,r,i,l,s,a],getProjTitle:()=>r,getProjIndex:()=>i,getTitle:()=>t,getPriority:()=>o,getStatus:()=>a,getIndex:()=>s,updateAllProp(...a){[t,e,n,o,r,i,l]=[...a]},updateStatus:()=>(a=!a,a),updateIndex:t=>(s=t,s),updateProjTitle(t){r=t},setStatus(t){a=t}}},l={};function a(){const t=i("First To-do","This to-do is for demonstration purposes.",(new Date).toISOString().substring(0,10),"04","Project Default",0,"To edit the to-do, you can click on this section, and to check it as done, click on the priority circle.");t.updateIndex(1),l[1]=t;const e=JSON.parse(localStorage.getItem("toDosCont"))||{};e[1]=t.getAllProp(),localStorage.setItem("toDosCont",JSON.stringify(e))}function s(t){const e=[...t],n=[];for(let t=0;t<e.length;t+=1){if(""===e[t].value&&"notes"!==e[t].id)return!1;"radio"===e[t].type?e[t].checked&&n.push(e[t].value):"select-one"===e[t].type?(n.push(e[t].options[e[t].options.selectedIndex].value),n.push(e[t].options.selectedIndex)):n.push(e[t].value)}return n}function c(t,e,n){const o=document.createElement(""+e);return"append"===n?t.appendChild(o):t.insertBefore(o,n),o}function A(t,e){const n=c(t,"div","append");n.setAttribute("class","modal");const o=c(n,"div","append");o.setAttribute("class","modal-content");c(o,"h3","append").innerHTML=""+e;const r=c(o,"p","append");return r.innerHTML="Please fill in all required fields.",r.setAttribute("class","input-msg-required"),n}function d(...t){t[0].setAttribute("id",""+t[1]),t[0].setAttribute("type",""+t[2]),"radio"===t[2]?(t[0].setAttribute("name",""+t[3]),t[0].setAttribute("value",""+t[4])):t[0].setAttribute("name",""+t[1]),"notes"===t[1]&&(t[0].maxLength="200"),"date"===t[2]&&(t[0].min=(new Date).toISOString().substring(0,10))}function p(t,e,n,o,r){const i=c(t,"label","append");i.innerHTML=""+n[o][0],i.setAttribute("for",""+n[o][1]);let l="";if("select"===n[o][2]){l=c(t,"select","append"),l.setAttribute("class",""+e);const n=Object.values(r);for(let t=0;t<n.length;t+=1){const e=c(l,"option","append");e.setAttribute("value",""+n[t].getTitle()),e.innerHTML=""+n[t].getTitle(),0===t&&(e.selected=!0)}}else l=c(t,"input","append"),l.setAttribute("class",""+e);d(l,n[o][1],n[o][2])}function u(t){const e=c(t,"button","append");e.setAttribute("type","submit"),e.setAttribute("class","btn-submit"),e.innerHTML="SUBMIT";const n=c(t,"button","append");n.setAttribute("type","button"),n.setAttribute("class","btn-cancel"),n.innerHTML="CANCEL"}function f(){document.getElementById("show-all-proj")?document.getElementById("all-proj").click():document.getElementById("all-todos").click()}function C(...t){t[0].getElementsByTagName("button")[0].addEventListener("click",e=>{e.preventDefault();const n=function(t,e,n,r){let i="";if(t){const a=r(...t);if(r===o){const t=Object.keys(e)[Object.keys(e).length-1];i=parseInt(t,10)+1,a.updateIndex(i),e[i]=a;const n=JSON.parse(localStorage.getItem("projectsCont"));n[i]=a.getAllProp(),localStorage.setItem("projectsCont",JSON.stringify(n))}else{i=Object.keys(l).length+1,a.updateIndex(i),l[i]=a;const t=JSON.parse(localStorage.getItem("toDosCont"))||{};t[i]=a.getAllProp(),localStorage.setItem("toDosCont",JSON.stringify(t))}return n.style.display="none",!0}return!1}(s(document.getElementsByClassName(""+t[4])),t[2],t[1],t[3]),r=e.target.closest(".modal-content").children[1];if(n){const t=document.getElementById("todo-form");r.style.display="none",document.querySelector(".modal").remove(),t?document.getElementById("all-todos").click():document.getElementById("all-proj").click()}else r.style.display="block"})}function g(t){[t.getElementsByTagName("button")[1],document.getElementsByClassName("modal")[0]].forEach(t=>{t.addEventListener("click",e=>{e.target===t&&document.querySelector(".modal").remove()})})}function m(t,e,n){const o=c(t,"section","append");o.setAttribute("id",""+e);return c(o,"h1","append").innerHTML=""+n,o}function b(){document.getElementById("sect-selected-todo").children[0]&&document.getElementById("sect-selected-todo").children[0].remove()}function h(t,e,n,o){t.addEventListener("click",t=>{t.preventDefault();const i=t.target.closest(".modal-content").children[1],a=s(document.getElementsByClassName(""+n));a?(i.style.display="none",function(t,e,n){if("todo-form"===e){l[t].updateAllProp(...n);const e=JSON.parse(localStorage.getItem("toDosCont"));e[t]=l[t].getAllProp(),localStorage.setItem("toDosCont",JSON.stringify(e))}else{r[t].updateTitle(n[0]);const e=JSON.parse(localStorage.getItem("projectsCont"));e[t]=r[t].getAllProp(),localStorage.setItem("projectsCont",JSON.stringify(e));const o=JSON.parse(localStorage.getItem("toDosCont"));Object.values(l).forEach(e=>{e.getProjIndex()===t&&(e.updateProjTitle(n[0]),o[e.getIndex()][4]=n[0])}),localStorage.setItem("toDosCont",JSON.stringify(o))}}(o.getIndex(),e,a),document.querySelector(".modal").remove(),f()):i.style.display="block"})}function x(...t){t[0].addEventListener("click",e=>{if(!document.querySelector(".modal")){document.getElementById(""+t[1]).click();const o=document.querySelector(".modal-content").children[0],i=document.getElementsByClassName("btn-submit")[0];if(function(t,e,n,o){const r=c(document.getElementById(""+e),"button",t);r.setAttribute("class","btn-edit"),r.innerHTML="EDIT",h(r,e,n,o)}(i,""+t[2],""+t[3],t[4]),0!==t[4].getIndex()){!function(t,e,n){t.addEventListener("click",t=>{t.preventDefault();const o=e.closest("li"),i=o.getAttribute("id-data").slice(5);if(o.remove(),"todo-form"===n){delete l[i];const t=JSON.parse(localStorage.getItem("toDosCont"));delete t[i],localStorage.setItem("toDosCont",JSON.stringify(t))}else{const t=JSON.parse(localStorage.getItem("toDosCont")),e=JSON.parse(localStorage.getItem("projectsCont"));Object.values(l).forEach(e=>{e.getProjIndex()===r[i].getIndex()&&(delete l[e.getIndex()],delete t[e.getIndex()])}),delete r[i],delete e[i],localStorage.setItem("toDosCont",JSON.stringify(t)),localStorage.setItem("projectsCont",JSON.stringify(e))}document.querySelector(".modal").remove(),f()})}(function(t,e){const n=c(document.getElementById(""+e),"button",t);return n.innerHTML="DELETE",n.setAttribute("class","delete-todo"),n}(i,""+t[2]),e.target,t[2]);const n=document.getElementById("delete-warning");n&&(n.style.display="block")}if(i.remove(),"todo-form"===t[2]){!function(t){const e=document.getElementsByClassName("input-todo");[e[0].value,e[1].value,e[2].value,e[7].options.selectedIndex,e[8].value]=[t[0],t[1],t[2],t[5],t[6]];for(let n=3;n<7;n+=1)e[n].checked=e[n].value===t[3]}(t[4].getAllProp()),o.innerHTML="Edit To-Do"}else{const e=t[4].getTitle();n=e,document.getElementsByClassName("input-proj")[0].value=n,o.innerHTML="Edit Project"}}var n})}const y=[n.p+"05fe948dd897e0c0fbd3b3614e6a79c0.png",n.p+"be80bc7e78fe3232775b41e02d911a29.png",n.p+"e37ff12ea2badbfdc32514ec43363834.png",n.p+"3f7b197b0dce2b33b37dd28a29c733f0.png"];var v=function(t,e,n){const o=A(t,"New Project"),r=function(t){const e=c(t,"form","append");e.setAttribute("id","proj-form");const n=c(e,"p","append");n.setAttribute("id","delete-warning"),n.innerHTML="IMPORTANT: If you delete a project, all associated to-dos will be deleted as well.";const o=c(e,"label","append");o.setAttribute("for","name"),o.innerHTML="Project Name";const r=c(e,"input","append");return r.setAttribute("class","input-proj"),d(r,"name","text"),u(e),e}(o.children[0]);return C(r,o,e,n,"input-proj"),g(r),o};const B=[["Title","title","text"],["Description","description","text"],["Due Date","due-date","date"],["Select which Project it belongs to","form-projects","select"],["Notes (optional)","notes","textarea"]],w=[["critical","radio","priority","01"],["high","radio","priority","02"],["medium","radio","priority","03"],["low","radio","priority","04"]];function E(t,e,n,o){const r=c(t,"div","append"),i=c(r,"input","append");i.setAttribute("class",""+e),d(i,...n[o]);const l=c(r,"label","append");l.setAttribute("for",""+n[o][0]),l.innerHTML=""+n[o][0],3===o&&(i.checked=!0)}function k(...t){const e=A(t[0],"New To-Do"),n=function(t,e,n,o,r){const i=c(t,"form","append");i.setAttribute("id","todo-form");for(let t=0;t<n.length;t+=1){if(3===t){c(i,"p","append").innerHTML="Priority:";const t=c(i,"div","append");t.setAttribute("class","radio-container");for(let n=0;n<o.length;n+=1)E(t,e,o,n)}p(i,e,n,t,r)}return u(i),i}(e.children[0],"input-todo",t[1],t[2],t[5]);return C(n,e,t[3],t[4],"input-todo"),g(n),e}const j=[n.p+"0eb28a9d1f1dd1696db54714da3d6d55.png",n.p+"cf61b8421a546a25a825d28faa4eded0.png",n.p+"285766cbd0edc3143584781957d611be.png",n.p+"a8205499c6dcfdc0f3b6443dd7956bce.png",n.p+"494b4cb63c81c064281e6e212696c42b.png"];function I(t,e){switch(t){case"01":return["CRITICAL",e[1]];case"02":return["HIGH",e[2]];case"03":return["MEDIUM",e[3]];default:return["LOW",e[4]]}}function S(t,e,n,o){t.addEventListener("click",t=>{const r=e.updateStatus(),i=t.target.closest(".todo-priority"),l=i.closest("li").children[1],a=JSON.parse(localStorage.getItem("toDosCont"));a[e.getIndex()]=e.getAllProp(),localStorage.setItem("toDosCont",JSON.stringify(a)),r?(i.style.backgroundImage=`url('${n[0]}')`,i.getElementsByTagName("p")[0].style.visibility="hidden",l.style.backgroundColor="#efefef"):(i.style.backgroundImage=`url('${I(o,n)[1]}')`,i.getElementsByTagName("p")[0].style.visibility="visible",l.style.backgroundColor="#fff")})}function D(t,e,n){const o=c(t,"div","append");o.setAttribute("class",""+e);const r=c(o,"ul","append"),i=function(t){const e=[];return Object.values(t).forEach(t=>{e.push(t)}),e.sort((t,e)=>t.getPriority()-e.getPriority(),0),e}(l);for(let t=0;t<i.length;t+=1){const e=i[t].getAllProp(),o=c(r,"li","append");o.setAttribute("id-data","todo-"+i[t].getIndex());const l=c(o,"div","append"),a=I(e[3],n)[0];l.setAttribute("class","todo-priority "+a.toLowerCase());const s=c(l,"p","append");s.innerHTML=""+a,S(l,i[t],n,e[3]);const A=c(o,"div","append");A.setAttribute("class","todo-content"),x(A,"add-todo","todo-form","input-todo",i[t]);const d=c(A,"div","append");d.setAttribute("class","title-btn");const p=c(d,"h3","append");p.setAttribute("class","proj-title-todo"),p.innerHTML=i[t].getProjTitle();c(d,"h4","append").innerHTML=""+e[0];c(A,"p","append").innerHTML=""+e[1];c(A,"p","append").innerHTML=""+e[2];c(A,"p","append").innerHTML=""+e[6],e[8]?(l.style.backgroundImage=`url('${n[0]}')`,s.style.visibility="hidden",A.style.backgroundColor="#efefef"):l.style.backgroundImage=`url('${I(e[3],n)[1]}')`}return o}var T=function(t,e){b();const n=m(t,"show-all-proj","All Projects");return function(t,e,n){const o=c(t,"div","append");o.setAttribute("class",""+n);const r=c(o,"ul","append");Object.values(e).forEach(t=>{const e=c(r,"li","append");e.setAttribute("class","project-content"),x(e,"add-proj","proj-form","input-proj",t),e.setAttribute("id-data","proj-"+t.getIndex());c(e,"h2","append").innerHTML=t.getTitle();const n=Object.values(l);n.length&&n.forEach(n=>{if(n.getProjIndex()===t.getIndex()){const t=c(e,"h3","append");t.setAttribute("class","proj-list-todo"),t.innerHTML=n.getTitle()}})})}(n,e,"show-ul-cont"),n};const O=c(document.getElementById("content"),"main","append");!function(t,e,n,o){const r=c(t,"nav","append"),i=c(r,"ul","append");for(let t=0;t<4;t+=1){const r=c(i,"li","append");r.setAttribute("id",""+e[t]);c(r,"div","append").style.backgroundImage=`url('${o[t]}')`;c(r,"p","append").innerHTML=""+n[t]}}(O,["add-proj","add-todo","all-proj","all-todos"],["New Project","New To-Do","All Projects","All To-Dos"],y);const L=c(O,"article","append");var J;L.setAttribute("id","sect-selected-todo"),J=r,JSON.parse(localStorage.getItem("projectsCont"))||function(){const t=o("Project Default");t.updateIndex(0),r[0]=t.getAllProp(),localStorage.setItem("projectsCont",JSON.stringify(r))}(),function(t){const e=JSON.parse(localStorage.getItem("projectsCont"));for(let n=0;n<Object.keys(e).length;n+=1){const r=o(...e[n]);r.updateIndex(n),t[n]=r}}(J),function(t){const e=JSON.parse(localStorage.getItem("toDosCont"))||{};Object.values(e).length||a(),function(t){const e=JSON.parse(localStorage.getItem("toDosCont"))||{},n=Object.keys(e)[Object.keys(e).length-1],o=parseInt(n,10)+1;for(let n=0;n<o;n+=1)if(e[n+1]){const o=i(...e[n+1]);o.updateIndex(n+1),o.setStatus(e[n+1][8]),t[n+1]=o}}(t)}(l);const N=document.getElementsByTagName("ul")[0].children;N[0].addEventListener("click",()=>{if(!document.querySelector(".modal")){v(O,r,o).style.display="block"}}),N[1].addEventListener("click",()=>{if(!document.querySelector(".modal")){k(O,B,w,r,i,r).style.display="block"}}),N[2].addEventListener("click",()=>{T(L,r)}),N[3].addEventListener("click",()=>{!function(t,e){b();const n=m(t,"show-all-todo","All To-Dos");D(n,"show-ul-cont",e)}(L,j)}),N[3].click()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,